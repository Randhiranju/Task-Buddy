{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randh\\\\Downloads\\\\Frontend\\\\src\\\\context\\\\ToastContext.jsx\";\nimport { createContext } from \"react\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext();\nexport const ToastContextProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      toast\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false,\n      gutter: 8,\n      containerClassName: \"\",\n      containerStyle: {},\n      toastOptions: {\n        // default options\n        className: '',\n        duration: 2000,\n        style: {\n          background: '#363636',\n          color: '#fff'\n        },\n        // options for specific types\n        success: {\n          duration: 1500,\n          theme: {\n            primary: 'green',\n            secondary: 'black'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ToastContextProvider;\nexport default ToastContext;\nvar _c;\n$RefreshReg$(_c, \"ToastContextProvider\");","map":{"version":3,"names":["createContext","toast","Toaster","jsxDEV","_jsxDEV","ToastContext","ToastContextProvider","_ref","children","Provider","value","position","reverseOrder","gutter","containerClassName","containerStyle","toastOptions","className","duration","style","background","color","success","theme","primary","secondary","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/randh/Downloads/Frontend/src/context/ToastContext.jsx"],"sourcesContent":["import { createContext } from \"react\";\nimport toast, { Toaster } from 'react-hot-toast';\nconst ToastContext = createContext();\n\nexport const ToastContextProvider = ({ children }) => {\n    return (\n        <ToastContext.Provider value={{ toast }}>\n            <Toaster\n                position=\"top-center\"\n                reverseOrder={false}\n                gutter={8}\n                containerClassName=\"\"\n                containerStyle={{}}\n                toastOptions={{\n                    // default options\n                    className: '',\n                    duration: 2000,\n                    style: {\n                        background: '#363636',\n                        color: '#fff',\n                    },\n\n                    // options for specific types\n                    success: {\n                        duration: 1500,\n                        theme: {\n                            primary: 'green',\n                            secondary: 'black',\n                        },\n                    },\n                }}\n            />\n            {children}\n        </ToastContext.Provider>\n    )\n}\n\nexport default ToastContext;\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,OAAOC,KAAK,IAAIC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,oBAAoB,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAC7C,oBACIH,OAAA,CAACC,YAAY,CAACI,QAAQ;IAACC,KAAK,EAAE;MAAET;IAAM,CAAE;IAAAO,QAAA,gBACpCJ,OAAA,CAACF,OAAO;MACJS,QAAQ,EAAC,YAAY;MACrBC,YAAY,EAAE,KAAM;MACpBC,MAAM,EAAE,CAAE;MACVC,kBAAkB,EAAC,EAAE;MACrBC,cAAc,EAAE,CAAC,CAAE;MACnBC,YAAY,EAAE;QACV;QACAC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE;UACHC,UAAU,EAAE,SAAS;UACrBC,KAAK,EAAE;QACX,CAAC;QAED;QACAC,OAAO,EAAE;UACLJ,QAAQ,EAAE,IAAI;UACdK,KAAK,EAAE;YACHC,OAAO,EAAE,OAAO;YAChBC,SAAS,EAAE;UACf;QACJ;MACJ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACDrB,QAAQ;EAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAAAC,EAAA,GA/BYxB,oBAAoB;AAiCjC,eAAeD,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}