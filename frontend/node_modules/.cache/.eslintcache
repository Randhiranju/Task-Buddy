[{"C:\\Users\\randh\\Downloads\\Frontend\\src\\index.jsx":"1","C:\\Users\\randh\\Downloads\\Frontend\\src\\App.jsx":"2","C:\\Users\\randh\\Downloads\\Frontend\\src\\dashBoard.jsx":"3","C:\\Users\\randh\\Downloads\\Frontend\\src\\tasks.jsx":"4","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\Register.jsx":"5","C:\\Users\\randh\\Downloads\\Frontend\\src\\context\\ToastContext.jsx":"6","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\login.jsx":"7","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\navBar.jsx":"8","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\profile.jsx":"9","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\footer.jsx":"10","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\ChangeImagePrompt.jsx":"11","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\index.jsx":"12","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\App.jsx":"13","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\dashBoard.jsx":"14","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\tasks.jsx":"15","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\Register.jsx":"16","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\login.jsx":"17","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\context\\ToastContext.jsx":"18","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\navBar.jsx":"19","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\profile.jsx":"20","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\footer.jsx":"21","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\ChangeImagePrompt.jsx":"22"},{"size":210,"mtime":1689006554000,"results":"23","hashOfConfig":"24"},{"size":669,"mtime":1689052304000,"results":"25","hashOfConfig":"24"},{"size":290,"mtime":1689057696000,"results":"26","hashOfConfig":"24"},{"size":10678,"mtime":1689075080000,"results":"27","hashOfConfig":"24"},{"size":4990,"mtime":1689066072000,"results":"28","hashOfConfig":"24"},{"size":1151,"mtime":1682089214000,"results":"29","hashOfConfig":"24"},{"size":3225,"mtime":1689065854000,"results":"30","hashOfConfig":"24"},{"size":1741,"mtime":1689088194860,"results":"31","hashOfConfig":"24"},{"size":15485,"mtime":1689074554000,"results":"32","hashOfConfig":"24"},{"size":365,"mtime":1689071984000,"results":"33","hashOfConfig":"24"},{"size":1717,"mtime":1689057920000,"results":"34","hashOfConfig":"24"},{"size":210,"mtime":1689006554000,"results":"35","hashOfConfig":"36"},{"size":669,"mtime":1689052304000,"results":"37","hashOfConfig":"36"},{"size":290,"mtime":1689057696000,"results":"38","hashOfConfig":"36"},{"size":10678,"mtime":1689075080000,"results":"39","hashOfConfig":"36"},{"size":4990,"mtime":1689066072000,"results":"40","hashOfConfig":"36"},{"size":3225,"mtime":1689065854000,"results":"41","hashOfConfig":"36"},{"size":1151,"mtime":1682089214000,"results":"42","hashOfConfig":"36"},{"size":1741,"mtime":1689088194860,"results":"43","hashOfConfig":"36"},{"size":11102,"mtime":1689090082701,"results":"44","hashOfConfig":"36"},{"size":365,"mtime":1689071984000,"results":"45","hashOfConfig":"36"},{"size":1717,"mtime":1689057920000,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fjq1ie",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1apvbmb",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\randh\\Downloads\\Frontend\\src\\index.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\App.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\dashBoard.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\tasks.jsx",["116"],[],"import NavBar from \"./components/navBar\"\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport axios from \"axios\"\nimport moment from 'moment';\nimport \"./page.css\"\nimport { useState, useContext, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport ToastContext from \"./context/ToastContext\";\nimport Footer from \"./components/footer\";\n\n// const API = \"http://localhost:5000\";\nconst API = \"https://task-manager-server-fl58.onrender.com\";\n\nconst Tasks = () => {\n    const [data, setData] = useState({\n        task: \"\"\n    })\n    const navigate = useNavigate(\"\")\n    const [editId, setEditId] = useState(\"\")\n    const [tasks, setTasks] = useState([])\n    const [edit, setEdit] = useState(false)\n    const { toast } = useContext(ToastContext);\n\n    const formatDate = (date) => {\n        const dateObj = moment(date);\n        return dateObj.format('DD/MM/YYYY');\n    };\n    const formatTime = (Time) => {\n        const dateObj = moment(Time);\n        return dateObj.format('hh:mm A');\n    };\n\n    const APICALL = async () => {\n        await axios.get(API + \"/tasks\", { headers: { \"authorization\": localStorage.getItem('token') } })\n            .then((res) => {\n                setTasks(res.data.tasks)\n                console.log(res)\n            })\n            .catch((e) => {\n                toast.error(e.response.data.message)\n            })\n    }\n    useEffect(() => {\n        if (!localStorage.getItem(\"token\")) {\n            navigate(\"/\")\n        }\n        APICALL()\n    }, [])\n\n    const handleTaskComp = (id , status) => {\n        console.log(status)\n        axios.put(`${API}/updateTaskStatus/${id}`, {status:status}, { headers: { \"authorization\": localStorage.getItem('token') } })\n            .then((res) => {\n                setTasks(res.data.tasks)\n            })\n            .catch((e) => {\n                toast.error(e.response.data.message)\n            })\n    }\n    const handleChange = (e) => {\n        const newdata = { ...data }\n        newdata[e.target.name] = e.target.value\n        setData(newdata)\n    }\n    const handleDeleteTask = (id) => {\n        axios.delete(`${API}/deleteTask/${id}`, { headers: { \"authorization\": localStorage.getItem('token') } })\n            .then((res) => {\n                toast.success(res.data.message)\n                setTasks(res.data.tasks)\n            })\n            .catch((e) => {\n                toast.error(e.response.data.message)\n            })\n    }\n    const handleAddTask = (e) => {\n        // console.log(data.task)\n        e.preventDefault()\n        axios.post(API + \"/AddTasks\", {\n            task: data.task\n        }, { headers: { \"authorization\": localStorage.getItem('token') } })\n            .then((res) => {\n                // console.log(res)\n                setTasks(res.data.tasks)\n                toast.success(\"Task Added SuccessFully\")\n                setData({ task: \"\" })\n            })\n            .catch((e) => {\n                // console.log(e)\n                toast.error(e.message)\n            })\n\n    }\n    const handleEditTask = (id, task) => {\n        setEdit(true)\n        setData({ task: task })\n        setEditId(id)\n    }\n    const SubmitEditTask = async () => {\n        await axios.put(`${API}/updateTask/${editId}`, { task: data.task }, { headers: { \"authorization\": localStorage.getItem('token') } })\n            .then((res) => {\n                setTasks(res.data.tasks)\n                toast.success(\"Task Edited SuccessFully\")\n                setEdit(false)\n                setData({ task: \"\" })\n            })\n            .catch((e) => {\n                toast.error(e.response.data.message)\n                setEdit(false)\n            })\n    }\n\n\n    return (\n        <>\n            <NavBar />\n            <section class=\"vh-100 gradient-custom-2\">\n                <div class=\"container py-5 h-100\">\n                    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n                        <div class=\"pb-2\">\n                            <div class=\"card\" style={{boxShadow: \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\", width:\"50%\",margin:\"auto\"}}>\n                                <div class=\"card-body\">\n                                    <div class=\"d-flex flex-row align-items-center \">\n                                        <input type=\"text\" class=\"form-control form-control-lg\"\n                                            placeholder=\"Enter new task...\" value={data.task} name=\"task\" onChange={(e) => handleChange(e)} />\n                                        <div>\n                                            {!edit ? (<button type=\"button\" class=\"btn btn-white ml-2 p-0\" onClick={handleAddTask}><i class=\"fas fa-plus-circle fa-2x text-dark\"></i></button>) :\n                                                (<button type=\"button\" class=\"btn btn-white\" onClick={SubmitEditTask}><i class=\"fas fa-pencil fa-3x text-primary\"></i></button>)}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-12 col-xl-30\">\n                            <div class=\"card mask-custom\">\n                                <div class=\"card-body p-4 text-white\">\n\n                                    <div class=\"text-center pt-3 pb-2\">\n                                        <h2 class=\"my-4\">My Tasks</h2>\n                                    </div>\n                                    <PerfectScrollbar style={{ height: '300px' }}>\n\n                                        <table class=\"table table-bordered text-white mb-0\" >\n                                            <thead>\n                                                <tr>\n                                                    <th>S.No</th>\n                                                    <th scope=\"col\">Start Date</th>\n                                                    <th scope=\"col\">Start Time</th>\n                                                    <th scope=\"col\">End Date</th>\n                                                    <th scope=\"col\">End Date</th>\n                                                    <th scope=\"col\">Task</th>\n                                                    <th scope=\"col\">Status</th>\n                                                    <th scope=\"col\">Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {tasks?.map((task, idx) => (\n                                                    <tr class=\"fw-normal\" key={task._id}>\n                                                        <th>\n                                                            <span class=\"ms-2\">{idx+1}</span>\n                                                        </th>\n                                                        <th>\n                                                            <span class=\"ms-2\">{formatDate(task.createdAt)}</span>\n                                                        </th>\n                                                        <th>\n                                                            <span class=\"ms-2\">{formatTime(task.createdAt)}</span>\n                                                        </th>\n                                                        <th>\n                                                            <span class=\"ms-2\">{task.status !== \"Completed\"?\"- -\":formatDate(task.updatedAt)}</span>\n                                                        </th>\n                                                        <th>\n                                                            <span class=\"ms-2\">{task.status !== \"Completed\"?\"- -\":formatTime(task.updatedAt)}</span>\n                                                        </th>\n                                                        <td class=\"align-middle\" style={{fontWeight:\"bold\"}}>\n                                                            <span>{task.task}</span>\n                                                        </td>\n                                                        <td class=\"align-middle\">\n                                                            <h6 class=\"mb-0\"><span class={task.status === \"Completed\" ? \"badge bg-success\" : \"badge bg-warning\"}>{task.status}</span></h6>\n                                                        </td>\n                                                        <td class=\"align-middle\" >\n                                                            {task.status === \"Pending\" ? (<span data-mdb-toggle=\"tooltip\" title=\"Done\" style={{ cursor: \"pointer\", marginRight: \"10px\" }} onClick={() => handleTaskComp(task._id , \"Completed\")}><i\n                                                                class=\"fas fa-check-square fa-2x text-success me-3\"></i></span>) :\n                                                                (<span data-mdb-toggle=\"tooltip\" title=\"Retry\" style={{ cursor: \"pointer\", marginRight: \"10px\" }} onClick={() => handleTaskComp(task._id , \"Pending\")}><i\n                                                                    class=\"fas fa-clock-rotate-left fa-2x text-warning me-3\"></i></span>)}\n\n                                                            <span style={{ cursor: \"pointer\", marginRight: \"10px\" }} data-mdb-toggle=\"tooltip\" title=\"Edit\" onClick={() => handleEditTask(task._id, task.task)}><i\n                                                                class=\"fas fa-pencil-square fa-2x\" style={{color:\"cyan\"}}></i></span>\n                                                            <span onClick={() => handleDeleteTask(task._id)} style={{ cursor: \"pointer\" }} data-mdb-toggle=\"tooltip\" title=\"Remove\"><i\n                                                                class=\"fas fa-trash-alt fa-2x text-danger\"></i></span>\n                                                        </td>\n                                                    </tr>\n                                                ))}\n\n\n\n\n\n                                            </tbody>\n                                        </table>\n\n                                    </PerfectScrollbar>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <Footer/>\n        </>\n    )\n}\n\nexport default Tasks","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\Register.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\context\\ToastContext.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\login.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\navBar.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\profile.jsx",["117","118"],[],"import \"../page.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport ToastContext from \"../context/ToastContext\";\nimport ChnageImagePrompt from \"./ChangeImagePrompt\";\n\n// const API = \"http://localhost:5000\";\nconst API = \"https://task-manager-server-fl58.onrender.com\";\n\nconst Profile = () => {\n    const { toast } = useContext(ToastContext);\n    const [data, setData] = useState({});\n    const [tasks, setTasks] = useState([]);\n    const [updatePrompt, setUpdatePrompt] = useState(false);\n    const [tasksCount, setTasksCount] = useState({\n        pending: 0,\n        completed: 0,\n        total: 0,\n    });\n    const navigate = useNavigate();\n    const APICALL = async () => {\n        await axios\n            .get(API + \"/user\", {\n                headers: { authorization: localStorage.getItem(\"token\") },\n            })\n            .then((res) => {\n                setData(res.data.user);\n                // localStorage.setItem('image',res.data.user.image)\n                // console.log(res)\n            })\n            .catch((e) => {\n                // console.log(e.message)\n                toast.error(e.response.message);\n            });\n    };\n    const getTasksCount = () => {\n        const completedTask = tasks.filter((task) => task.status === \"Completed\");\n        const newTasksCount = {\n            pending: tasks.length - completedTask.length,\n            completed: completedTask.length,\n            total: tasks.length,\n        };\n        setTasksCount(newTasksCount);\n    };\n    useEffect(() => {\n        getTasksCount();\n    }, [tasks]);\n\n    async function TaskAPI() {\n        await axios\n            .get(API + \"/tasks\", {\n                headers: { authorization: localStorage.getItem(\"token\") },\n            })\n            .then((res) => {\n                setTasks(res.data.tasks);\n                console.log(res);\n            })\n            .catch((e) => {\n                // console.log(e.message)\n                toast.error(e.response.message);\n            });\n    }\n    const handleEdit = () => {\n        setUpdatePrompt(true);\n    };\n    const closePrompt = () => {\n        // function for passing as a prop to close the prompt\n        APICALL();\n        setUpdatePrompt(false);\n    };\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"token\")) {\n            navigate(\"/\");\n        }\n        APICALL();\n        TaskAPI();\n    }, []);\n    return (\n        <section class=\"mt-4 mb-5\" className=\"ggbg\">\n            <div\n                className=\"container bootstrap snippets bootdey\"\n                style={{ marginBottom: \"100px\" }}\n            >\n                <div className=\"row\">\n                    <div className=\"profile-nav col-md-3\">\n                        <div className=\"panel\">\n                            <div className=\"user-heading round container\">\n                                <div className=\"col-sm\">\n                                    <h3 className=\"terques\">Total Tasks</h3>\n                                    <div\n                                        style={{\n                                            display: \"inline\",\n                                            width: \"100px\",\n                                            height: \"100px\",\n                                        }}\n                                    >\n                                        <canvas width=\"100\" height=\"100px\"></canvas>\n                                        <input\n                                            className=\"knob\"\n                                            data-width=\"100\"\n                                            data-height=\"100\"\n                                            data-displayprevious=\"true\"\n                                            data-thickness=\".2\"\n                                            value={tasksCount.total}\n                                            data-fgcolor=\"#4CC5CD\"\n                                            data-bgcolor=\"#e8e8e8\"\n                                            style={{\n                                                width: \"54px\",\n                                                height: \"33px\",\n                                                position: \"absolute\",\n                                                verticalAlign: \"middle\",\n                                                marginTop: \"33px\",\n                                                marginLeft: \"-77px\",\n                                                border: \"0\",\n                                                fontWeight: \"bold\",\n                                                fontStyle: \"normal\",\n                                                fontVariant: \"normal\",\n                                                fontStretch: \"normal\",\n                                                fontSize: \"30px\",\n                                                lineHeight: \"normal\",\n                                                fontFamily: \"Arial\",\n                                                textAlign: \"center\",\n                                                color: \"rgb(76, 197, 205)\",\n                                                padding: \"0\",\n                                                WebkitAppearance: \"none\",\n                                                background: \"none\",\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <h3 className=\"red\">Tasks to do</h3>\n                                    <div\n                                        style={{\n                                            display: \"inline\",\n                                            width: \"100px\",\n                                            height: \"100px\",\n                                        }}\n                                    >\n                                        <canvas width=\"100\" height=\"100px\"></canvas>\n                                        <input\n                                            className=\"knob\"\n                                            data-width=\"100\"\n                                            data-height=\"100\"\n                                            data-displayprevious=\"true\"\n                                            data-thickness=\".2\"\n                                            value={tasksCount.pending}\n                                            data-fgcolor=\"#e06b7d\"\n                                            data-bgcolor=\"#e8e8e8\"\n                                            style={{\n                                                width: \"54px\",\n                                                height: \"33px\",\n                                                position: \"absolute\",\n                                                verticalAlign: \"middle\",\n                                                marginTop: \"33px\",\n                                                marginLeft: \"-77px\",\n                                                border: \"0\",\n                                                fontWeight: \"bold\",\n                                                fontStyle: \"normal\",\n                                                fontVariant: \"normal\",\n                                                fontStretch: \"normal\",\n                                                fontSize: \"30px\",\n                                                lineHeight: \"normal\",\n                                                fontFamily: \"Arial\",\n                                                textAlign: \"center\",\n                                                color: \"rgb(224, 107, 125)\",\n                                                padding: \"0\",\n                                                WebkitAppearance: \"none\",\n                                                background: \"none\",\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <h3 className=\"green\">Tasks done</h3>\n                                    <div\n                                        style={{\n                                            display: \"inline\",\n                                            width: \"100px\",\n                                            height: \"100px\",\n                                        }}\n                                    >\n                                        <canvas width=\"100\" height=\"100px\"></canvas>\n                                        <input\n                                            className=\"knob\"\n                                            data-width=\"100\"\n                                            data-height=\"100\"\n                                            data-displayprevious=\"true\"\n                                            data-thickness=\".2\"\n                                            value={tasksCount.completed}\n                                            data-fgcolor=\"#96be4b\"\n                                            data-bgcolor=\"#e8e8e8\"\n                                            style={{\n                                                width: \"54px\",\n                                                height: \"33px\",\n                                                position: \"absolute\",\n                                                verticalAlign: \"middle\",\n                                                marginTop: \"33px\",\n                                                marginLeft: \"-77px\",\n                                                border: \"0\",\n                                                fontWeight: \"bold\",\n                                                fontStyle: \"normal\",\n                                                fontVariant: \"normal\",\n                                                fontStretch: \"normal\",\n                                                fontSize: \"30px\",\n                                                lineHeight: \"normal\",\n                                                fontFamily: \"Arial\",\n                                                textAlign: \"center\",\n                                                color: \"rgb(150, 190, 75)\",\n                                                padding: \"0\",\n                                                WebkitAppearance: \"none\",\n                                                background: \"none\",\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"prompt\">\n                        {updatePrompt && <ChnageImagePrompt closePrompt={closePrompt} />}\n                    </div>\n                    <div className=\"profile-info col-md-9\">\n                        <h1 style={{color: \"#2a2438;\"}}>My Dashboard</h1>\n\n                        <div className=\"container body-ro\">\n                            <div\n                                className=\"row\"\n                                style={{\n                                    margin: \"10px 5px 5px 10px\",\n                                    paddingTop: \"50px\",\n                                    paddingBottom: \"50px\",\n                                }}\n                            >\n                            <div style={{float: \"left\", display : \"flex\", marginLeft: \"20%\"}}>\n                                <div className=\"profile-nav col-md-3\">\n                                    <div className=\"usr-heading round container\">\n                                        <span className=\"figure\">\n                                            <img src={data.image} alt=\"profilePic\" />\n                                            <div className=\"data-container\">\n                                                <div className=\"name\" onClick={handleEdit}>\n                                                    Edit\n                                                </div>\n                                            </div>\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div>\n                                    <h1 style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n                                    {data.firstName} {data.lastName}\n                                    </h1>\n                                    <p style={{ color: \"white\" }}>{data.email}</p>\n                                </div>\n                                \n                            </div>\n                                \n                            </div>\n                            <div className=\"panel\">\n                                <div\n                                    className=\"panel-body bio-graph-heading\"\n                                    style={{ color: \"white\" }}\n                                >\n                                    <div className=\"row\">\n                                        <div className=\"bio-row\" style={{ color: \"white\" }}>\n                                            <p>\n                                                <span>First Name </span>: {data.firstName}\n                                            </p>\n                                        </div>\n                                        <div className=\"bio-row\">\n                                            <p>\n                                                <span>Last Name </span>: {data.lastName}\n                                            </p>\n                                        </div>\n                                        <div className=\"bio-row\">\n                                            <p>\n                                                <span>Country </span>: {data.country}\n                                            </p>\n                                        </div>\n                                        <div className=\"bio-row\">\n                                            <p>\n                                                <span>Profession </span>: {data.occupation}\n                                            </p>\n                                        </div>\n                                        <div className=\"bio-row\">\n                                            <p>\n                                                <span>Email </span>: {data.email}\n                                            </p>\n                                        </div>\n                                        <div className=\"bio-row\">\n                                            <p>\n                                                <span>Mobile </span>: {data.phone}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default Profile;\n","C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\footer.jsx",[],[],"C:\\Users\\randh\\Downloads\\Frontend\\src\\components\\ChangeImagePrompt.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\index.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\App.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\dashBoard.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\tasks.jsx",["119"],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\Register.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\login.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\context\\ToastContext.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\navBar.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\profile.jsx",["120","121"],[],"import \"../page.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport ToastContext from \"../context/ToastContext\";\nimport ChnageImagePrompt from \"./ChangeImagePrompt\";\n\n// const API = \"http://localhost:5000\";\nconst API = \"https://task-manager-server-fl58.onrender.com\";\n\nconst Profile = () => {\n  const { toast } = useContext(ToastContext);\n  const [data, setData] = useState({});\n  const [tasks, setTasks] = useState([]);\n  const [updatePrompt, setUpdatePrompt] = useState(false);\n  const [tasksCount, setTasksCount] = useState({\n    pending: 0,\n    completed: 0,\n    total: 0,\n  });\n  const navigate = useNavigate();\n  const APICALL = async () => {\n    await axios\n      .get(API + \"/user\", {\n        headers: { authorization: localStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        setData(res.data.user);\n        // localStorage.setItem('image',res.data.user.image)\n        // console.log(res)\n      })\n      .catch((e) => {\n        // console.log(e.message)\n        toast.error(e.response.message);\n      });\n  };\n  const getTasksCount = () => {\n    const completedTask = tasks.filter((task) => task.status === \"Completed\");\n    const newTasksCount = {\n      pending: tasks.length - completedTask.length,\n      completed: completedTask.length,\n      total: tasks.length,\n    };\n    setTasksCount(newTasksCount);\n  };\n  useEffect(() => {\n    getTasksCount();\n  }, [tasks]);\n\n  async function TaskAPI() {\n    await axios\n      .get(API + \"/tasks\", {\n        headers: { authorization: localStorage.getItem(\"token\") },\n      })\n      .then((res) => {\n        setTasks(res.data.tasks);\n        console.log(res);\n      })\n      .catch((e) => {\n        // console.log(e.message)\n        toast.error(e.response.message);\n      });\n  }\n  const handleEdit = () => {\n    setUpdatePrompt(true);\n  };\n  const closePrompt = () => {\n    // function for passing as a prop to close the prompt\n    APICALL();\n    setUpdatePrompt(false);\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      navigate(\"/\");\n    }\n    APICALL();\n    TaskAPI();\n  }, []);\n  return (\n    <section class=\"mt-4 mb-5\" className=\"ggbg\">\n      <div\n        className=\"container bootstrap snippets bootdey\"\n        style={{ marginBottom: \"100px\" }}\n      >\n        <div className=\"row\">\n          <div className=\"profile-nav col-md-3\">\n            <div className=\"panel\">\n              <div className=\"user-heading round container\">\n                <div className=\"col-sm\">\n                  <h3 className=\"terques\">Total Tasks</h3>\n                  <div\n                    style={{\n                      display: \"inline\",\n                      width: \"100px\",\n                      height: \"100px\",\n                    }}\n                  >\n                    <canvas width=\"100\" height=\"100px\"></canvas>\n                    <input\n                      className=\"knob\"\n                      data-width=\"100\"\n                      data-height=\"100\"\n                      data-displayprevious=\"true\"\n                      data-thickness=\".2\"\n                      value={tasksCount.total}\n                      data-fgcolor=\"#4CC5CD\"\n                      data-bgcolor=\"#e8e8e8\"\n                      style={{\n                        width: \"54px\",\n                        height: \"33px\",\n                        position: \"absolute\",\n                        verticalAlign: \"middle\",\n                        marginTop: \"33px\",\n                        marginLeft: \"-77px\",\n                        border: \"0\",\n                        fontWeight: \"bold\",\n                        fontStyle: \"normal\",\n                        fontVariant: \"normal\",\n                        fontStretch: \"normal\",\n                        fontSize: \"30px\",\n                        lineHeight: \"normal\",\n                        fontFamily: \"Arial\",\n                        textAlign: \"center\",\n                        color: \"rgb(76, 197, 205)\",\n                        padding: \"0\",\n                        WebkitAppearance: \"none\",\n                        background: \"none\",\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm\">\n                  <h3 className=\"red\">Tasks to do</h3>\n                  <div\n                    style={{\n                      display: \"inline\",\n                      width: \"100px\",\n                      height: \"100px\",\n                    }}\n                  >\n                    <canvas width=\"100\" height=\"100px\"></canvas>\n                    <input\n                      className=\"knob\"\n                      data-width=\"100\"\n                      data-height=\"100\"\n                      data-displayprevious=\"true\"\n                      data-thickness=\".2\"\n                      value={tasksCount.pending}\n                      data-fgcolor=\"#e06b7d\"\n                      data-bgcolor=\"#e8e8e8\"\n                      style={{\n                        width: \"54px\",\n                        height: \"33px\",\n                        position: \"absolute\",\n                        verticalAlign: \"middle\",\n                        marginTop: \"33px\",\n                        marginLeft: \"-77px\",\n                        border: \"0\",\n                        fontWeight: \"bold\",\n                        fontStyle: \"normal\",\n                        fontVariant: \"normal\",\n                        fontStretch: \"normal\",\n                        fontSize: \"30px\",\n                        lineHeight: \"normal\",\n                        fontFamily: \"Arial\",\n                        textAlign: \"center\",\n                        color: \"rgb(224, 107, 125)\",\n                        padding: \"0\",\n                        WebkitAppearance: \"none\",\n                        background: \"none\",\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm\">\n                  <h3 className=\"green\">Tasks done</h3>\n                  <div\n                    style={{\n                      display: \"inline\",\n                      width: \"100px\",\n                      height: \"100px\",\n                    }}\n                  >\n                    <canvas width=\"100\" height=\"100px\"></canvas>\n                    <input\n                      className=\"knob\"\n                      data-width=\"100\"\n                      data-height=\"100\"\n                      data-displayprevious=\"true\"\n                      data-thickness=\".2\"\n                      value={tasksCount.completed}\n                      data-fgcolor=\"#96be4b\"\n                      data-bgcolor=\"#e8e8e8\"\n                      style={{\n                        width: \"54px\",\n                        height: \"33px\",\n                        position: \"absolute\",\n                        verticalAlign: \"middle\",\n                        marginTop: \"33px\",\n                        marginLeft: \"-77px\",\n                        border: \"0\",\n                        fontWeight: \"bold\",\n                        fontStyle: \"normal\",\n                        fontVariant: \"normal\",\n                        fontStretch: \"normal\",\n                        fontSize: \"30px\",\n                        lineHeight: \"normal\",\n                        fontFamily: \"Arial\",\n                        textAlign: \"center\",\n                        color: \"rgb(150, 190, 75)\",\n                        padding: \"0\",\n                        WebkitAppearance: \"none\",\n                        background: \"none\",\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"prompt\">\n            {updatePrompt && <ChnageImagePrompt closePrompt={closePrompt} />}\n          </div>\n          <div className=\"profile-info col-md-9\">\n            <h1 style={{ color: \"#2a2438;\" }}>My Dashboard</h1>\n\n            <div className=\"container body-ro\">\n              <div\n                className=\"row\"\n                style={{\n                  margin: \"10px 5px 5px 10px\",\n                  paddingTop: \"50px\",\n                  paddingBottom: \"50px\",\n                }}\n              >\n                <div\n                  style={{ float: \"left\", display: \"flex\", marginLeft: \"20%\" }}\n                >\n                  <div className=\"profile-nav col-md-3\">\n                    <div className=\"usr-heading round container\">\n                      <span className=\"figure\">\n                        <img src={data.image} alt=\"profilePic\" />\n                        <div className=\"data-container\">\n                          <div className=\"name\" onClick={handleEdit}>\n                            Edit\n                          </div>\n                        </div>\n                      </span>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h1 style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n                      {data.firstName} {data.lastName}\n                    </h1>\n                    <p style={{ color: \"white\" }}>{data.email}</p>\n                    <div style={{marginTop:\"8px\"}}>Go to tasks\n                    <button type=\"button\" class=\"btn btn-white ml-2 p-0\" onClick={() => navigate(\"/tasks\")}><i class=\"fas fa-external-link fa-sm text-white\"></i></button>\n                    </div>\n                  </div>\n\n                  \n                </div>\n              </div>\n              <div className=\"panel\">\n                <div\n                  className=\"panel-body bio-graph-heading\"\n                  style={{ color: \"white\" }}\n                >\n                  <div className=\"row\">\n                    <div className=\"bio-row\" style={{ color: \"white\" }}>\n                      <p>\n                        <span>First Name </span>: {data.firstName}\n                      </p>\n                    </div>\n                    <div className=\"bio-row\">\n                      <p>\n                        <span>Last Name </span>: {data.lastName}\n                      </p>\n                    </div>\n                    <div className=\"bio-row\">\n                      <p>\n                        <span>Country </span>: {data.country}\n                      </p>\n                    </div>\n                    <div className=\"bio-row\">\n                      <p>\n                        <span>Profession </span>: {data.occupation}\n                      </p>\n                    </div>\n                    <div className=\"bio-row\">\n                      <p>\n                        <span>Email </span>: {data.email}\n                      </p>\n                    </div>\n                    <div className=\"bio-row\">\n                      <p>\n                        <span>Mobile </span>: {data.phone}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default Profile;\n","C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\footer.jsx",[],[],"C:\\Users\\randh\\OneDrive\\Desktop\\my_projects\\Frontend\\src\\components\\ChangeImagePrompt.jsx",[],[],{"ruleId":"122","severity":1,"message":"123","line":49,"column":8,"nodeType":"124","endLine":49,"endColumn":10,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":48,"column":8,"nodeType":"124","endLine":48,"endColumn":15,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":79,"column":8,"nodeType":"124","endLine":79,"endColumn":10,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"123","line":49,"column":8,"nodeType":"124","endLine":49,"endColumn":10,"suggestions":"130"},{"ruleId":"122","severity":1,"message":"126","line":48,"column":6,"nodeType":"124","endLine":48,"endColumn":13,"suggestions":"131"},{"ruleId":"122","severity":1,"message":"128","line":79,"column":6,"nodeType":"124","endLine":79,"endColumn":8,"suggestions":"132"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'APICALL' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'getTasksCount'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'APICALL', 'TaskAPI', and 'navigate'. Either include them or remove the dependency array.",["135"],["136"],["137"],["138"],{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"139","fix":"145"},{"desc":"141","fix":"146"},{"desc":"143","fix":"147"},"Update the dependencies array to be: [APICALL, navigate]",{"range":"148","text":"149"},"Update the dependencies array to be: [getTasksCount, tasks]",{"range":"150","text":"151"},"Update the dependencies array to be: [APICALL, TaskAPI, navigate]",{"range":"152","text":"153"},{"range":"154","text":"149"},{"range":"155","text":"151"},{"range":"156","text":"153"},[1565,1567],"[APICALL, navigate]",[1640,1647],"[getTasksCount, tasks]",[2460,2462],"[APICALL, TaskAPI, navigate]",[1565,1567],[1476,1483],[2162,2164]]